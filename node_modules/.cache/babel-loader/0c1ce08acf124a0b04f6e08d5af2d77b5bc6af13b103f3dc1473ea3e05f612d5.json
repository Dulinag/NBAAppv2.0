{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\Bennetts-Port\\\\crypto-fees\\\\src\\\\components\\\\Particle.jsx\",\n  _s = $RefreshSig$();\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport { useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Particle() {\n  _s();\n  const optionsVar = {\n    fullScreen: {\n      zIndex: -1\n    },\n    background: {\n      color: {\n        value: black\n      },\n      gradient: {}\n    },\n    // style: {\n    //     position: 'absolute'\n    // },\n    fpsLimit: 120,\n    interactivity: {\n      events: {\n        // onClick: {\n        //     enable: true,\n        //     mode: \"push\",\n        // },\n        onHover: {\n          enable: true,\n          mode: \"repulse\"\n        },\n        resize: true\n      },\n      modes: {\n        push: {\n          quantity: 8\n        },\n        repulse: {\n          distance: 200,\n          duration: 0.4\n        }\n      }\n    },\n    particles: {\n      color: {\n        value: \"#ffffff\"\n      },\n      collisions: {\n        enable: false\n      },\n      line_linked: {\n        enable: true,\n        distance: 600,\n        color: \"#ffffff\",\n        opacity: 0.4,\n        width: 2\n      },\n      move: {\n        directions: \"none\",\n        enable: true,\n        outModes: {\n          default: \"bounce\"\n        },\n        random: false,\n        speed: 3,\n        straight: false\n      },\n      \"number\": {\n        \"value\": 25,\n        \"density\": {\n          \"enable\": false,\n          \"value_area\": 800\n        }\n      },\n      opacity: {\n        value: 0.5\n      },\n      shape: {\n        type: \"circle\"\n      },\n      size: {\n        value: {\n          min: 1,\n          max: 4\n        }\n      }\n    },\n    detectRetina: true\n  };\n  const particlesInit = useCallback(async main => {\n    console.log(main);\n    //     // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    //     // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    //     // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(main);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(container);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: \"tsparticles\",\n    init: particlesInit,\n    loaded: particlesLoaded,\n    options: optionsVar\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 1\n  }, this);\n}\n_s(Particle, \"PjleD03JXt5mR6AE5+SxrsWvXBc=\");\n_c = Particle;\nexport default Particle;\nvar _c;\n$RefreshReg$(_c, \"Particle\");","map":{"version":3,"names":["Particles","loadFull","useCallback","Particle","optionsVar","fullScreen","zIndex","background","color","value","black","gradient","fpsLimit","interactivity","events","onHover","enable","mode","resize","modes","push","quantity","repulse","distance","duration","particles","collisions","line_linked","opacity","width","move","directions","outModes","default","random","speed","straight","shape","type","size","min","max","detectRetina","particlesInit","main","console","log","particlesLoaded","container"],"sources":["C:/Users/Owner/Desktop/Bennetts-Port/crypto-fees/src/components/Particle.jsx"],"sourcesContent":["\r\nimport Particles from \"react-tsparticles\";\r\nimport {loadFull} from \"tsparticles\";\r\nimport { useCallback } from \"react\";\r\n\r\nfunction Particle() {\r\n\r\n    const optionsVar = {\r\n        fullScreen: {\r\n            zIndex: -1\r\n        },\r\n        background: {\r\n            color: {\r\n                value: black,\r\n            },\r\n            gradient:{\r\n\r\n            }\r\n        },\r\n        // style: {\r\n        //     position: 'absolute'\r\n        // },\r\n        fpsLimit: 120,\r\n        interactivity: {\r\n            events: {\r\n                // onClick: {\r\n                //     enable: true,\r\n                //     mode: \"push\",\r\n                // },\r\n                onHover: {\r\n                    enable: true,\r\n                    mode: \"repulse\",\r\n                },\r\n                resize: true,\r\n            },\r\n            modes: {\r\n                push: {\r\n                    quantity: 8,\r\n                },\r\n                repulse: {\r\n                    distance: 200,\r\n                    duration: 0.4,\r\n                },\r\n            },\r\n        },\r\n        particles: {\r\n            color: {\r\n                value: \"#ffffff\",\r\n            },\r\n            collisions: {\r\n                enable: false,\r\n            },\r\n            line_linked: {\r\n                enable: true,\r\n                distance: 600,\r\n                color: \"#ffffff\",\r\n                opacity: 0.4,\r\n                width: 2\r\n            },\r\n            move: {\r\n                directions: \"none\",\r\n                enable: true,\r\n                outModes: {\r\n                    default: \"bounce\",\r\n                },\r\n                random: false,\r\n                speed: 3,\r\n                straight: false,\r\n            },\r\n            \"number\": {\r\n                \"value\": 25,\r\n                \"density\": {\r\n                    \"enable\": false,\r\n                    \"value_area\": 800\r\n                }\r\n            },\r\n            opacity: {\r\n                value: 0.5,\r\n            },\r\n            shape: {\r\n                type: \"circle\",\r\n            },\r\n            size: {\r\n                value: { min: 1, max: 4 },\r\n            },\r\n\r\n        },\r\n        \r\n        detectRetina: true,\r\n    }\r\n\r\n    const particlesInit = useCallback(async main => {\r\n        console.log(main);\r\n    //     // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\r\n    //     // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n    //     // starting from v2 you can add only the features you need reducing the bundle size\r\n        await loadFull(main);\r\n    }, []);\r\n    \r\n    const particlesLoaded = useCallback(async container => {\r\n       await console.log(container);\r\n    }, []);\r\n\r\nreturn (\r\n<Particles\r\n        id=\"tsparticles\"\r\n        init={particlesInit}\r\n        loaded={particlesLoaded}\r\n        options={optionsVar}\r\n    />\r\n)\r\n}\r\n\r\nexport default Particle"],"mappings":";;AACA,OAAOA,SAAS,MAAM,mBAAmB;AACzC,SAAQC,QAAQ,QAAO,aAAa;AACpC,SAASC,WAAW,QAAQ,OAAO;AAAC;AAEpC,SAASC,QAAQ,GAAG;EAAA;EAEhB,MAAMC,UAAU,GAAG;IACfC,UAAU,EAAE;MACRC,MAAM,EAAE,CAAC;IACb,CAAC;IACDC,UAAU,EAAE;MACRC,KAAK,EAAE;QACHC,KAAK,EAAEC;MACX,CAAC;MACDC,QAAQ,EAAC,CAET;IACJ,CAAC;IACD;IACA;IACA;IACAC,QAAQ,EAAE,GAAG;IACbC,aAAa,EAAE;MACXC,MAAM,EAAE;QACJ;QACA;QACA;QACA;QACAC,OAAO,EAAE;UACLC,MAAM,EAAE,IAAI;UACZC,IAAI,EAAE;QACV,CAAC;QACDC,MAAM,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACHC,IAAI,EAAE;UACFC,QAAQ,EAAE;QACd,CAAC;QACDC,OAAO,EAAE;UACLC,QAAQ,EAAE,GAAG;UACbC,QAAQ,EAAE;QACd;MACJ;IACJ,CAAC;IACDC,SAAS,EAAE;MACPjB,KAAK,EAAE;QACHC,KAAK,EAAE;MACX,CAAC;MACDiB,UAAU,EAAE;QACRV,MAAM,EAAE;MACZ,CAAC;MACDW,WAAW,EAAE;QACTX,MAAM,EAAE,IAAI;QACZO,QAAQ,EAAE,GAAG;QACbf,KAAK,EAAE,SAAS;QAChBoB,OAAO,EAAE,GAAG;QACZC,KAAK,EAAE;MACX,CAAC;MACDC,IAAI,EAAE;QACFC,UAAU,EAAE,MAAM;QAClBf,MAAM,EAAE,IAAI;QACZgB,QAAQ,EAAE;UACNC,OAAO,EAAE;QACb,CAAC;QACDC,MAAM,EAAE,KAAK;QACbC,KAAK,EAAE,CAAC;QACRC,QAAQ,EAAE;MACd,CAAC;MACD,QAAQ,EAAE;QACN,OAAO,EAAE,EAAE;QACX,SAAS,EAAE;UACP,QAAQ,EAAE,KAAK;UACf,YAAY,EAAE;QAClB;MACJ,CAAC;MACDR,OAAO,EAAE;QACLnB,KAAK,EAAE;MACX,CAAC;MACD4B,KAAK,EAAE;QACHC,IAAI,EAAE;MACV,CAAC;MACDC,IAAI,EAAE;QACF9B,KAAK,EAAE;UAAE+B,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE;QAAE;MAC5B;IAEJ,CAAC;IAEDC,YAAY,EAAE;EAClB,CAAC;EAED,MAAMC,aAAa,GAAGzC,WAAW,CAAC,MAAM0C,IAAI,IAAI;IAC5CC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACrB;IACA;IACA;IACI,MAAM3C,QAAQ,CAAC2C,IAAI,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,eAAe,GAAG7C,WAAW,CAAC,MAAM8C,SAAS,IAAI;IACpD,MAAMH,OAAO,CAACC,GAAG,CAACE,SAAS,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEV,oBACA,QAAC,SAAS;IACF,EAAE,EAAC,aAAa;IAChB,IAAI,EAAEL,aAAc;IACpB,MAAM,EAAEI,eAAgB;IACxB,OAAO,EAAE3C;EAAW;IAAA;IAAA;IAAA;EAAA,QACtB;AAEN;AAAC,GA1GQD,QAAQ;AAAA,KAARA,QAAQ;AA4GjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}